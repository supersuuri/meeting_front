name: Deploy Node Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_NAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t thesuuri/nodejs-app  .
      - name: Publish Image to docker hub
        run: docker push thesuuri/nodejs-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Clean up disk space
        run: docker system prune -af

      - name: Pull image from docker hub
        run: docker pull thesuuri/nodejs-app:latest
      - name: Delete old container
        run: docker rm -f nodejs-app-container
      - name: Run Docker Container
        run: docker run -d -p 3000:3000 --name nodejs-app-container -e MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} thesuuri/nodejs-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}     
      - name: Build Docker Image
        run: docker build -t thesuuri/reactjs-app --build-arg REACT_APP_NODE_ENV='production' --build-arg REACT_APP_SERVER_BASE_URL='${{ secrets.REACT_APP_SERVER_BASE_URL }}'  .
      - name: Publish Image to docker hub
        run: docker push thesuuri/reactjs-app:latest 
 
  deploy:
    needs: build
    runs-on: self-hosted 
    steps:
      - name: Pull image from docker hub
        run: docker pull thesuuri/reactjs-app:latest 
      - name: Delete old container
        run: docker rm -f reactjs-app-container
      - name: Run Docker Container
        run: docker run -d -p 3000:80 --name reactjs-app-container thesuuri/reactjs-app